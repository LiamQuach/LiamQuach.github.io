{
  "hash": "8fb3a766a42ba0c443dd58034beb1a98",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 1 - Quarto Warmup & STAT 331 Review\"\ndescription: \"Practice quarto\"\nauthor:\n  - name: Liam Quach\n    url: https://LiamQuach.github.io/\n    affiliation: Master of Science in Statistics @ Cal Poly\ndate: 05-04-2025\ncategories: [Quarto, R] # self-defined categories\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nexecute: \n  echo: true\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggridges)\n```\n:::\n\n\n\n## Quarto\n\nFirst, let's make sure you know how to use Markdown formatting to style a Quarto\ndocument.\n\n1.  **Make this text bold.**\n\n2.  *Make this text italicized.*\n\n3.  Make these into a bullet point list:\n\n-   Apples\n\n-   Bananas\n\n-   Potatoes\n\n4.  Edit the YAML to remove warning messages from being output in the rendered\nHTML file\n\n5. Using code chunk options, make it so this chunk shows the plot but not the source code:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/Box plot-1.png){width=672}\n:::\n:::\n\n\n\n6. Using code chunk options, remove the messages about bandwidth geom_density_ridges() chose to use:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_density_ridges() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Density plot-1.png){width=672}\n:::\n:::\n\n\n\n7. Using code chunk options, make it so that these plots are printed side-by-side:\n\n\n\n::: {.cell layout-nrow=\"1\"}\n\n```{.r .cell-code}\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_boxplot() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Box plot and density plot-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_density_ridges() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Box plot and density plot-2.png){width=672}\n:::\n:::\n\n\n\n8. Using code chunk options, make it so this chunk shows the code but not the output:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n2 + 2\n```\n:::\n\n\n\n9. Using code chunk options, make it so the file can still knit even though this chunk has an error\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n2 + a\n```\n:::\n\n\n\n10. Using code chunk options, create a descriptive `label` for each of the code\nchunks above.\n\n## Data Wrangling Review\n\nSince you already seen some `ggplot`s, let's do a bit of review on data \nhandling. In this class, we will exclusively make use of tools from the \n`tidyverse` suite of packages to perform our data cleaning and wrangling\noperations. If you are less familiar with these packages or it's been some time\nsince you used them, I would strongly recommend referencing the function \ndocumentation!  \n\nFor these problems, we will continue to work with the `mpg` data frame, making\nvarious changes to the data to clean it up. \n\n11. The `fl` variable describes the type of fuel for each car, with levels: `p`, \n`r`, `e`, `d`, and `c`. Do some research into what each of these labels mean! \nThen, use the `if_else()` function to create a new variable (`fuel_type`) with\ntwo levels: `petrol` (any car using petrolium-based gas) and \n`alternative energy` (any car not using petrolium-based gas). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg <- mpg |> \n  mutate(fuel_type = if_else(fl %in% c(\"p\", \"r\"), \"petrol\", \"alternative energy\"))\n\nhead(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 12\n  manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class \n  <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr> \n1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…\n2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…\n3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…\n4 audi         a4      2    2008     4 auto(av)   f        21    30 p     compa…\n5 audi         a4      2.8  1999     6 auto(l5)   f        16    26 p     compa…\n6 audi         a4      2.8  1999     6 manual(m5) f        18    26 p     compa…\n# ℹ 1 more variable: fuel_type <chr>\n```\n\n\n:::\n:::\n\n\n\n12. The `drv` variable describes if the car has front drive (`f`), rear drive\n(`r`), or four wheel drive (`4`). Let's make better labels for these values! \nSpecifically, use the `case_when()` function to change the `drv` variable to have\nthe following levels: `front`, `rear`, `four wheel`. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg <- mpg|> \n  mutate(drv = case_when(\n    drv == 'f' ~ 'front',\n    drv == 'r' ~ 'rear',\n    drv == '4' ~ 'four wheel',\n    TRUE ~ drv  \n  ))\nhead(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 12\n  manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class \n  <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr> \n1 audi         a4      1.8  1999     4 auto(l5)   front    18    29 p     compa…\n2 audi         a4      1.8  1999     4 manual(m5) front    21    29 p     compa…\n3 audi         a4      2    2008     4 manual(m6) front    20    31 p     compa…\n4 audi         a4      2    2008     4 auto(av)   front    21    30 p     compa…\n5 audi         a4      2.8  1999     6 auto(l5)   front    16    26 p     compa…\n6 audi         a4      2.8  1999     6 manual(m5) front    18    26 p     compa…\n# ℹ 1 more variable: fuel_type <chr>\n```\n\n\n:::\n:::\n\n\n\n\n\n(string split + remove extra \")\" )13. The `trans` variable contains two pieces of information, (1) the\ntransmission style (`auto` or `manual`) and the specific type of transmission\n(e.g., `l5`, `m5`). Using the `str_split()` function, create a new variable\n(`trans_type`) containing the specific type of transmission of each car. Once\nyou've made this new variable, use the `rename()` function to change the name\nof the `trans` column to `trans_style`.   \n*Hint: You will need to deal with the stray parenthesis!* \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg <- mpg %>%\n  mutate(trans_type = sapply(str_split(trans, \"\\\\(\"), function(x) gsub(\"\\\\)\", \"\", x[2]))) %>%\n  rename(trans_style = trans)\n\nmpg |> select(trans_type, trans_style)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 234 × 2\n   trans_type trans_style\n   <chr>      <chr>      \n 1 l5         auto(l5)   \n 2 m5         manual(m5) \n 3 m6         manual(m6) \n 4 av         auto(av)   \n 5 l5         auto(l5)   \n 6 m5         manual(m5) \n 7 av         auto(av)   \n 8 m5         manual(m5) \n 9 l5         auto(l5)   \n10 m6         manual(m6) \n# ℹ 224 more rows\n```\n\n\n:::\n:::\n\n\n\n## Getting to know your classmates\n\n14. Find someone who took Stat 331 from a different professor than you. Compare\nyour experiences. Tell me their name and professor. List one or two things that\nyou think you learned more about, and one or two things that they learned more\nabout.\n\nRachel took it with the Quarto Queen Dr. Theobold. \n\nI took it with Dr. Robinson. \n\nWe learn a lot about tidyverse and how amazing ggplot is. I learn more about which color pallette is user friendly. \n\nRachel learned more about data wrangling.\n\n15. Find someone in the class who **does not** share your birth month. Tell me\ntheir name and birthday, and use R to find out how many days apart your\nbirthdays are.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_bd <- as.Date(\"2002-06-14\")\n  \njacob_bd <- as.Date(\"2002-08-31\")\n\njacob_bd - my_bd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime difference of 78 days\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}